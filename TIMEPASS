<% include ../layouts/header %>

<div class="container mt-3 mb-3">
    <div class="row">

        <div class="col-md-3 mb-4">
            <div class="lead mb-3">YelpCamp</div>
            <div class="list-group">
                <div class="list-group-item active">Info 1</div>
                <div class="list-group-item">Info 2</div>
                <div class="list-group-item">Info 3</div>
            </div>
        </div>

        <div class="col-md-9">

            <div class="card mb-4">
                <img class="card-img-top" src="<%= campground.image %>">
                <div class="card-body">
                    <div class="card-title">
                        <a href="#" class="heading-3 a-hover"><%= campground.name %></a>
                        <strong class="float-right mt-2">$<%= campground.price %> / Night</strong>
                    </div>
                    <p class="card-text" style="text-align: justify"><%= campground.description %></p>
                    <p>
                        <% if (user && campground.author.id.equals(user._id)) { %>
                            <div class="float-right">
                                <form action='/campgrounds/<%= campground._id %>?_method=DELETE' method="POST">
                                    <a class="btn btn-outline-primary btn-sm" href="/campgrounds/<%= campground._id %>/edit">Edit</a>
                                    <button class="btn btn-outline-danger btn-sm ml-1">Delete</button>
                                </form>
                            </div>
                        <% } %>
                        <em>- Created by <strong><%= campground.author.username %></strong>, <%= moment(campground.createdAt).fromNow() %></em>
                    </p>
                    <span class="text-danger">4.5 stars</span>
                    <span class="float-right text-danger"><%= campground.comments.length %> reviews</span>
                </div>
            </div>
            
            <div class="jumbotron">
                <a href="/campgrounds/<%= campground._id %>/comments/new" class="btn btn-outline-success float-right btn-sm">Leave a Review </a>

                <div class="mt-lg">
                    <% campground.comments.forEach((comment) => { %>
                        <div>
                            <span>stars </span>
                            <strong><%= comment.author.username %></strong>
                            <span class="float-right text-dark"><%= moment(comment.createdAt).fromNow() %></span>
                        </div>
                        <p class="card-text"><%= comment.text %></p>
                        <% if (user && comment.author.id.equals(user._id)) { %>
                            <form action='/campgrounds/<%= campground._id %>/comments/<%= comment._id %>?_method=DELETE' method='POST'>
                                <a class='btn btn-outline-primary btn-sm' href='/campgrounds/<%= campground._id %>/comments/<%= comment._id %>/edit'>Edit</a>
                                <button class='btn btn-outline-danger btn-sm ml-1'>Delete</button>
                            </form>
                            <% } %>    
                        <hr>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>
</div>

<% include ../layouts/footer %>




const Student = require("../models/student");
const Investor = require("../models/investor");

const middleware = {};

middleware.isStudentLoggedIn = (req, res, next) => {
    // if (req.user) {
    //     if (req.user.usertype === "STUDENT") {
    //         Student.findOne({ email: req.user.email })
    //         .then(user => {
    //             if (user) return next();
    //             else return res.redirect("/");
    //         })
    //     } else return res.redirect("/");
    // } else return res.redirect("/");
    console.log(req.user.usertype);
    if (req.isAuthenticated()y) return next();
    else res.redirect("/student/login");
};

middleware.isInvestorLoggedIn = (req, res, next) => {
    // if (req.user) {
    //     if (req.user.usertype === "INVESTOR") {
    //         Investor.findOne({ email: req.user.email })
    //         .then(user => {
    //             if (user) return next();
    //             else return res.redirect("/");
    //         })
    //     } else return res.redirect("/");
    // } else return res.redirect("/");
    if (req.isAuthenticated() && req.user.usertype === "INVESTOR") return next();
    else res.redirect("/investor/login");
};

module.exports = middleware;